<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:annotation-config />
	
	<!-- Apply dependency injection to non-managed classes, i.e. those with 
		@Configurable annotation -->
	<context:spring-configured />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Factory bean that creates the Mongo instance -->
	<beans:bean id="mongo"
		class="org.springframework.data.mongodb.core.MongoFactoryBean">
		<beans:property name="host" value="localhost" />
	</beans:bean>

	<!-- MongoTemplate for connecting and quering the documents in the database -->
	<beans:bean id="mongoTemplate"
		class="org.springframework.data.mongodb.core.MongoTemplate">
		<beans:constructor-arg name="mongo" ref="mongo" />
		<beans:constructor-arg name="databaseName"
			value="wonderlust" />
	</beans:bean>

	<beans:bean id="connectionFactoryLocator"
		class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
		<beans:property name="connectionFactories">
			<beans:list>
				<beans:bean
					class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
					<beans:constructor-arg value="1496942123893394" />
					<beans:constructor-arg value="2062721718fdcf60447ad7aa3ccff89b" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	




	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.FormHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<beans:bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<context:component-scan base-package="com.wonderlust.traveler" />



</beans:beans>
